# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files

# General cache, local databases, and logs
__pycache__/
db.sqlite3
*.log

# Dependencies
node_modules/

# Expo specific
.expo/
dist/
web-build/
expo-env.d.ts

# Native Build Artifacts & Sensitive Files
# Android specific
.gradle/
**/build/ # Catches build folders like android/app/build, android/build, etc.
local.properties # For Android SDK location, often contains user-specific paths

# General Native/Build
.kotlin/ # Kotlin build cache
build/ # General top-level build directory

# Certificates, Keys & Provisioning (ensure private keys are not committed)
*.jks
*.p8
*.p12
*.key
*.mobileprovision
*.pem

# Backup files generated by some editors
*.orig.*
*~
*.bak
*.swp

# Metro Bundler
.metro-health-check*

# Debugging files
npm-debug.*
yarn-debug.*
yarn-error.*

# Operating System specific
# macOS
.DS_Store
# Windows
Thumbs.db

# Local environment configuration
# Ignore all .env files by default
.env*
# Except for example files (uncomment and adjust if you use this pattern)
# !.env.example
# !.env.sample

# TypeScript
*.tsbuildinfo

# IDE directories and files
.idea/ # JetBrains IDEs
.vscode/ # Visual Studio Code (user-specific settings)
# If you want to commit shared VS Code settings (e.g., for team consistency):
# !.vscode/extensions.json
# !.vscode/launch.json
# !.vscode/settings.json # Be cautious if it contains machine-specific paths
# !.vscode/tasks.json

# Test Coverage
coverage/
.nyc_output/

# Custom project specific (from your original file)
app-example