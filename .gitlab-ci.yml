stages:
  - build
  - deploy

variables:
  ANDROID_SDK_ROOT: "$CI_PROJECT_DIR/android-sdk"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"
  APK_OUTPUT_PATH: "frontend/android/app/build/outputs/apk/release/app-release.apk"
  APK_NAME: "app-release.apk"

build:
  stage: build
  image: reactnativecommunity/react-native-android
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules
    policy: pull 
  before_script:
    - cd frontend
    - yarn install --frozen-lockfile 
  script:
    - cd android && ./gradlew assembleRelease
    - yarn install --pure-lockfile --cache-folder .yarn
    - find app/build/outputs/apk/ -type f
  only:
    - master
  artifacts:
    paths:
      - app/build/outputs/apk/release/app-release.apk

deploy:
  image: alpine:latest
  stage: deploy
  script:
    - apk add --no-cache curl git
    - echo "<a href='https://${GIT_USER_NAME}.github.io/${GIT_REPO}/apk/app-release.apk' download>Download APK</a>" > index.html
    - git config --global user.email "ci@example.com"
    - git config --global user.name "CI Bot"
    - git clone https://github.com/${GIT_USER_NAME}/${GIT_REPO}.git
    - cd ${GIT_REPO}
    - mkdir -p docs/apk
    - cp ../index.html .
    - echo "../${APK_OUTPUT_PATH}"
    - cp ../${APK_OUTPUT_PATH} docs/apk/app-release.apk
    - git add index.html docs/apk/app-release.apk
    - git commit -m "Update APK link"
    - git push https://$GIT_TOKEN@github.com/${GIT_USER_NAME}/${GIT_REPO}.git HEAD:main